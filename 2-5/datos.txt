4
2 6 3 8
8
6 12 8 18 10 15 16 40
8
6 12 8 18 11 15 17 41
16
1 3 2 5 3 1 3 4 4 6 8 2 3 5 7 2
0



//*****************
// IMPORTANTE
//
// Nombre y apellidos del alumno
// Usuario del juez de examen que has utilizado en la prueba de hoy
//
//***************************************************
#include <iostream>
#include <fstream>
#include <vector>

//*******************************
// Explicacion del algoritmo utilizado
// Coste de la solucion. Recurrencia y orden de complejidad
//*******************

// Aqui la funcion recursiva que resuelve el problema


// Tratar cada caso
bool resuelveCaso() {
    // Lectura de los datos
    int num;
    std::cin >> num;
    if (num == 0) return false;
    std::vector<int> v(num);
    for (int i = 0; i < num; ++i){
        std::cin >> v[i];
    }

    // resolver
    
    // Escribir los resultados
    if (........) std::cout << "SI" << '\n';
    else std::cout << "NO\n";
    return true;
    
}

int main() {
    // Para la entrada por fichero.
    #ifndef DOMJUDGE
      std::ifstream in("sample.in");
      auto cinbuf = std::cin.rdbuf(in.rdbuf());
    #endif

    while (resuelveCaso())
        ;
    
    // Para restablecer entrada.
    
    #ifndef DOMJUDGE // para dejar todo como estaba al principio
        std::cin.rdbuf(cinbuf);
        //system("PAUSE");
    #endif

    return 0;
}
